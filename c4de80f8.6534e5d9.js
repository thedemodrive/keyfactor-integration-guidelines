(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{63:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return r})),a.d(t,"metadata",(function(){return o})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return d}));var n=a(2),i=a(6),l=(a(0),a(75)),r={id:"install",title:"Install",sidebar_label:"Install",slug:"/install"},o={unversionedId:"install",id:"install",isDocsHomePage:!1,title:"Install",description:"1. Download and extract bundle",source:"@site/docs/install.md",slug:"/install",permalink:"/keyfactor-integration-guidelines/docs/install",editUrl:"https://github.com/thedemodrive/keyfactor-integration-guidelines/docs/install.md",version:"current",sidebar_label:"Install",sidebar:"someSidebar",previous:{title:"Prerequisite",permalink:"/keyfactor-integration-guidelines/docs/"},next:{title:"Install Istio",permalink:"/keyfactor-integration-guidelines/docs/istio"}},s=[{value:"1. Download and extract bundle",id:"1-download-and-extract-bundle",children:[]},{value:"2. Create a Kubernetes Secret contains Keyfactor&#39;s credentials",id:"2-create-a-kubernetes-secret-contains-keyfactors-credentials",children:[]},{value:"3. Install Keyfactor Kubernetes Proxy via Helm 3",id:"3-install-keyfactor-kubernetes-proxy-via-helm-3",children:[]},{value:"3. Install finished",id:"3-install-finished",children:[]}],c={rightToc:s};function d(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h3",{id:"1-download-and-extract-bundle"},"1. Download and extract bundle"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Download bundle at: ",Object(l.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/thedemodrive/keyfactor-istio/releases/download/keyfactor-v2-beta/keyfactor-v2-beta.zip"}),Object(l.b)("strong",{parentName:"a"},"Click here to download release bundle "))),Object(l.b)("li",{parentName:"ul"},"Extract to ",Object(l.b)("inlineCode",{parentName:"li"},"./keyfactor"))),Object(l.b)("h3",{id:"2-create-a-kubernetes-secret-contains-keyfactors-credentials"},"2. Create a Kubernetes Secret contains Keyfactor's credentials"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Create or Update file ",Object(l.b)("inlineCode",{parentName:"li"},"./keyfactor/credentials.yaml"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-YAML"}),'# Endpoint of Keyfactor Platform\nendPoint: ""\n\n# Name of certificate authorization for enroll Istio\'s Workload Certificate\ncaName: ""\n\n# Using for authentication header: "Basic ...."\nauthToken: ""\n\n# API path for enroll new certificate from Keyfactor\nenrollPath: ""\n\n# Certificate Template for enroll Istio\'s Workload Certificate: Default is Istio\ncaTemplate: "Istio"\n\n# ApiKey from Api Setting, for enroll Istio\'s Workload Certificate\nappKey: ""\n\n# ApiKey for auto provisioning TLS server / client certificates\nprovisioningAppKey: ""\n\n# CA Template for auto provisioning TLS server / client certificates\nprovisioningTemplate: "Istio"\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Create kubernetes secrets name ",Object(l.b)("inlineCode",{parentName:"li"},"keyfactor-credentials")," with above file")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"kubectl create namespace keyfactor\nkubectl create secret generic keyfactor-credentials -n keyfactor --from-file credentials.yaml\n")),Object(l.b)("h3",{id:"3-install-keyfactor-kubernetes-proxy-via-helm-3"},"3. Install Keyfactor Kubernetes Proxy via Helm 3"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Update helm's values at ",Object(l.b)("inlineCode",{parentName:"li"},"./keyfactor/helm-values.yaml"))),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Yaml"}),"# Number of replication for Keyfactor-Proxy\nreplicaCount: 1\nkeyfactor:\n  # Name of kubernetes secret contains credentials.yaml\n  secretName: keyfactor-credentials\n  # Config name mapping Keyfactor's Custom Metadata, turn off field by remove field\n  # Pattern: [Istio Metadata Field] : [Keyfactor Metadata Name]\n  # Supported Istio's Metadata: ClusterID, ServiceName, PodName, PodIP, PodNamespace, TrustDomain\n  metadataMapping:\n    ClusterID: Cluster\n    ServiceName: Service\n    PodName: PodName\n    PodIP: PodIP\n    PodNamespace: PodNamespace\n    TrustDomain: TrustDomain # Value Example: cluster.local\n  # Enable auto provisioning TLS's client certificates\n  # Using for secure connection between Istio <> Keyfactor K8S Agent\n  enableAutoProvisioningIstioCert: true\n  istioNamespace: istio-system # Namespace to install Istio\n  istioSecretName: custom-ca-tls # Name of secret contains TLS Client Certs\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Install via Helm command")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"helm install keyfactor-k8s -n keyfactor ./keyfactor/release/keyfactor-k8s-0.0.1.tgz -f helm-values.yaml --wait\n")),Object(l.b)("h3",{id:"3-install-finished"},"3. Install finished"),Object(l.b)("p",null,"Keyfactor K8S Proxy will auto provisioning TLS Client Certificates for Istio Integrating. The following values are used at Istio Integration:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Namespace to install Istio: ",Object(l.b)("inlineCode",{parentName:"li"},"istioNamespace: istio-system ")),Object(l.b)("li",{parentName:"ul"},"Name of secret contains TLS Client Certs: ",Object(l.b)("inlineCode",{parentName:"li"},"istioSecretName: custom-ca-tls"))),Object(l.b)("p",null,"Install finished screenshot:\n",Object(l.b)("img",Object(n.a)({parentName:"p"},{src:"https://github.com/thedemodrive/keyfactor-istio/raw/master/img/Helm%20Result.png",alt:"Finised",title:"Finished"}))))}d.isMDXComponent=!0}}]);